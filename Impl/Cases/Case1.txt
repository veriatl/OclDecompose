
=== OCL

Rel$RelSchema.allInstance->forall( s |
	s.relations->forall(r1 |
		s.relations->forall( r2 |
			r1 <> r2 implies r1.name <> r2.name
		)
	)
)

=== AST

(Quantified 
  Forall 
  (Fcall "allInstance" [(Literal (StringValue "Rel$RelSchema"))]) 
  ("s", (RefType "Rel$RelSchema"))
  (Quantified Forall
    (Navigation "Relations" (Variable ("s", (RefType "Rel$RelSchema"))) (RefType "Rel$Relation"))
    ("r1", (RefType "Rel$Relation"))
    (Quantified Forall
      (Navigation "Relations" (Variable ("s", (RefType "Rel$RelSchema"))) (RefType "Rel$Relation"))
      ("r2", (RefType "Rel$Relation"))
      (BinaryExpression Implies
        (BinaryExpression Neq 
          (Variable ("r1", (RefType "Rel$Relation"))) 
          (Variable ("r2", (RefType "Rel$Relation"))))
        (BinaryExpression Neq 
          (Navigation "name" (Variable ("r1", (RefType "Rel$Relation"))) StringType) 
          (Navigation "name" (Variable ("r2", (RefType "Rel$Relation"))) StringType))
      )
    )
  ) 
)

=== Expected
 proceed